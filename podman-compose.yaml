# Podman Compose for OpenTelemetry Observability Stack
# Includes: OTel Collector, Jaeger, Prometheus
# Your app sends OTLP to collector (localhost:4317)
# Collector routes to Jaeger (traces) and Prometheus (metrics)

services:
  # OpenTelemetry Collector - central telemetry hub
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC receiver (your app sends here)
      - "4318:4318"   # OTLP HTTP receiver (alternative)
      - "8888:8888"   # Collector's own metrics
      - "8889:8889"   # Prometheus scrape endpoint
    depends_on:
      - jaeger
    networks:
      - observability

  # Jaeger - distributed tracing backend
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC (internal)
    networks:
      - observability

  # Prometheus - metrics backend
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"    # Prometheus UI
    networks:
      - observability

  # Grafana - visualization (optional but awesome)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"    # Grafana UI
    depends_on:
      - prometheus
      - jaeger
    networks:
      - observability

networks:
  observability:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
